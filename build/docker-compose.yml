version: '3'

services:
  web:
    build:
      context: docker/nginx
    volumes:
      - ../:/app:cached

  static:
    build:
      context: docker/nginx-static
    volumes:
      - ../:/app:cached

  node:
    image: node:11
    volumes:
      - ../:/app/:cached
    command:
      - sh
      - /app/build/node_entrypoint.sh
    expose:
      - "80"
      - "3001"

  jekyll:
    image: jekyll/jekyll
    volumes:
      - ../:/app/:cached
    command:
      - sh
    expose:
      - "80"
      - "4000"

  hugo:
    image: klakegg/hugo
    entrypoint: [ "/bin/sh", "-c" ]
    environment:
      HUGO_DESTINATION: _site
    volumes:
      - ../:/app:cached
    expose:
      - "80"
      - "1313"

  thumbor:
    image: minimalcompact/thumbor
    environment:
      # VIRTUAL_HOST is picked up by nginx-proxy. Here it's set for localhost
      # but you usually need to point it to your domain, e.g. thumbor.example.com
      - VIRTUAL_HOST=thumbor.meetshaus.t23dev
      # THUMBOR_NUM_PROCESSES control how many processes run inside the container
      # Normally this is set in connection with the number of CPU cores
      # Note however that you can also use the docker-compose scale option to dynamically
      # scale your thumbor instances
      - THUMBOR_NUM_PROCESSES=4
      # this would allow CORS from any origin (you can restrict to specific origins if you want)
      - CORS_ALLOW_ORIGIN=*
      # returns a webp image if browser Accept headers match
      - AUTO_WEBP=True
      # nginx-proxy does caching automatically, so no need to store the result storage cache
      # (this greatly speeds up and saves on CPU)
      - RESULT_STORAGE=thumbor.result_storages.no_storage
      - RESULT_STORAGE_STORES_UNSAFE=True
      - STORAGE=thumbor.storages.file_storage
    expose:
      - "80"
      - "8888"
